{"version":3,"file":"use-color-thief.js","sources":["../src/index.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport ColorThief from 'colorthief/dist/color-thief.mjs';\n\nconst rgbToHex = (r, g, b) => {\n  const toHex = (c) => c.toString(16).padStart(2, '0');\n  return `#${toHex(r)}${toHex(g)}${toHex(b)}`;\n};\n\nconst useColorThief = (\n  source,\n  { format = 'rgb', quality = 10, colorCount = 10 } = {}\n) => {\n  const [url, setUrl] = useState('');\n  const [output, setOutput] = useState({\n    color: null,\n    palette: null,\n  });\n\n  // Get the url to use for generating a palette\n  useEffect(() => {\n    console.log('Fired source effect', source);\n    if (source) {\n      if (\n        source.current &&\n        source.current instanceof HTMLImageElement &&\n        // When no url is passed, getting the 'src' attribute returns the page url\n        source.current.src !== window.location.href\n      ) {\n        const setCurrentSrc = () => {\n          console.log('setCurrentSrc');\n          if (source.current.src) {\n            setUrl(source.current.src);\n          }\n        };\n        setCurrentSrc();\n\n        const observer = new MutationObserver(setCurrentSrc);\n        observer.observe(source.current, { attributes: true });\n        return () => {\n          observer.disconnect();\n        };\n      }\n      if (typeof source === 'string' && source.length) {\n        setUrl(source);\n      }\n    }\n\n    return () => {};\n  }, [source]);\n\n  // When the image url changes, update the color and palette\n  useEffect(() => {\n    console.log('Fired url effect', url);\n    let isCurrent = true;\n\n    if (url) {\n      console.log('URL is defined:', url);\n      const img = new Image();\n      img.crossOrigin = 'anonymous';\n      img.referrerPolicy = 'no-referrer';\n\n      const handleImageLoad = () => {\n        console.log('handleImageLoad');\n        if (isCurrent) {\n          const colorThief = new ColorThief();\n\n          let color = colorThief.getColor(img, quality);\n          let palette = colorThief.getPalette(img, colorCount, quality);\n\n          if (format === 'hex') {\n            color = rgbToHex(...color);\n            palette = palette.map((rgb) => rgbToHex(...rgb));\n          }\n\n          setOutput({ color, palette });\n\n          img.removeEventListener('load', handleImageLoad);\n        }\n      };\n\n      img.addEventListener('load', handleImageLoad);\n      img.src = url;\n    }\n\n    return () => {\n      isCurrent = false;\n    };\n  }, [url, colorCount, quality, format]);\n\n  return output;\n};\n\nexport default useColorThief;\n"],"names":["rgbToHex","r","g","b","toHex","c","toString","padStart","source","format","quality","colorCount","useState","url","setUrl","color","palette","output","setOutput","useEffect","console","log","current","HTMLImageElement","src","window","location","href","setCurrentSrc","observer","MutationObserver","observe","attributes","disconnect","length","isCurrent","img","Image","crossOrigin","referrerPolicy","addEventListener","handleImageLoad","colorThief","ColorThief","getColor","getPalette","map","rgb","removeEventListener"],"mappings":"mJAGMA,EAAW,SAACC,EAAGC,EAAGC,GACtB,IAAMC,EAAQ,SAACC,UAAMA,EAAEC,SAAS,IAAIC,SAAS,EAAG,MAChD,UAAWH,EAAMH,GAAKG,EAAMF,GAAKE,EAAMD,mBAGnB,SACpBK,sBACoD,SAAlDC,OAAAA,aAAS,YAAOC,QAAAA,aAAU,SAAIC,WAAAA,aAAa,OAEvBC,WAAS,IAAxBC,OAAKC,SACgBF,WAAS,CACnCG,MAAO,KACPC,QAAS,OAFJC,OAAQC,OA4Ef,OAtEAC,YAAU,WAER,GADAC,QAAQC,IAAI,sBAAuBb,GAC/BA,EAAQ,CACV,GACEA,EAAOc,SACPd,EAAOc,mBAAmBC,kBAE1Bf,EAAOc,QAAQE,MAAQC,OAAOC,SAASC,KACvC,CACA,IAAMC,EAAgB,WACpBR,QAAQC,IAAI,iBACRb,EAAOc,QAAQE,KACjBV,EAAON,EAAOc,QAAQE,MAG1BI,IAEA,IAAMC,EAAW,IAAIC,iBAAiBF,GAEtC,OADAC,EAASE,QAAQvB,EAAOc,QAAS,CAAEU,YAAY,eAE7CH,EAASI,cAGS,iBAAXzB,GAAuBA,EAAO0B,QACvCpB,EAAON,GAIX,qBACC,CAACA,IAGJW,YAAU,WACRC,QAAQC,IAAI,mBAAoBR,GAChC,IAAIsB,GAAY,EAEhB,GAAItB,EAAK,CACPO,QAAQC,IAAI,kBAAmBR,GAC/B,IAAMuB,EAAM,IAAIC,MAChBD,EAAIE,YAAc,YAClBF,EAAIG,eAAiB,cAqBrBH,EAAII,iBAAiB,OAnBG,SAAlBC,IAEJ,GADArB,QAAQC,IAAI,mBACRc,EAAW,CACb,IAAMO,EAAa,IAAIC,UAEnB5B,EAAQ2B,EAAWE,SAASR,EAAK1B,GACjCM,EAAU0B,EAAWG,WAAWT,EAAKzB,EAAYD,GAEtC,QAAXD,IACFM,EAAQf,eAAYe,GACpBC,EAAUA,EAAQ8B,IAAI,SAACC,UAAQ/C,eAAY+C,MAG7C7B,EAAU,CAAEH,MAAAA,EAAOC,QAAAA,IAEnBoB,EAAIY,oBAAoB,OAAQP,MAKpCL,EAAIZ,IAAMX,EAGZ,kBACEsB,GAAY,IAEb,CAACtB,EAAKF,EAAYD,EAASD,IAEvBQ"}