import{useState as e,useEffect as r}from"react";import t from"colorthief/dist/color-thief.mjs";const o=(e,r,t)=>{const o=e=>e.toString(16).padStart(2,"0");return`#${o(e)}${o(r)}${o(t)}`};export default(n,{format:c="rgb",quality:l=10,colorCount:s=10}={})=>{const[i,a]=e(""),[u,f]=e({color:null,palette:null});return r(()=>{if(console.log("Fired source effect",n),n){if(n.current&&n.current instanceof HTMLImageElement&&n.current.src!==window.location.href){const e=()=>{console.log("setCurrentSrc"),n.current.src&&a(n.current.src)};e();const r=new MutationObserver(e);return r.observe(n.current,{attributes:!0}),()=>{r.disconnect()}}"string"==typeof n&&n.length&&a(n)}return()=>{}},[n]),r(()=>{console.log("Fired url effect",i);let e=!0;if(i){console.log("URL is defined:",i);const r=new Image;r.crossOrigin="anonymous",r.referrerPolicy="no-referrer";const n=()=>{if(console.log("handleImageLoad"),e){const e=new t;let i=e.getColor(r,l),a=e.getPalette(r,s,l);"hex"===c&&(i=o(...i),a=a.map(e=>o(...e))),f({color:i,palette:a}),r.removeEventListener("load",n)}};r.addEventListener("load",n),r.src=i}return()=>{e=!1}},[i,s,l,c]),u};
//# sourceMappingURL=use-color-thief.modern.js.map
